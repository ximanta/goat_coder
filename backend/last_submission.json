{
  "language_id": 4,
  "problem_id": "123",
  "structure": {
    "problem_name": "filter_popular_tracks",
    "function_name": "filter_popular_tracks",
    "input_structure": [
      {
        "Input_Field": "List[int] ratings"
      },
      {
        "Input_Field": "int threshold"
      }
    ],
    "output_structure": {
      "Output_Field": "List[int] result"
    }
  },
  "complete_source": "import java.util.*;\n            import java.io.*;\n            import java.text.*;\n            import java.time.*;\n            import java.math.*;\n            import java.util.regex.*;\n\npublic class Main {\n    public int[] filterPopularTracks(int[] ratings, int threshold) {\n/*DO NOT modify this method.*/\n\n    // First, count how many ratings are greater than the threshold.\n    int count = 0;\n    for (int rating : ratings) {\n        if (rating > threshold) {\n            count++;\n        }\n    }\n    \n    // Create a new array to store the ratings that exceed the threshold.\n    int[] popularTracks = new int[count];\n    int index = 0;\n    \n    // Add qualifying ratings to the new array.\n    for (int rating : ratings) {\n        if (rating > threshold) {\n            popularTracks[index++] = rating;\n        }\n    }\n    \n    // Return the array of popular tracks.\n    return popularTracks;\n    }\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        Main solution = new Main();\n        \n        // Parse input\n        String line0 = scanner.nextLine();\n        String[] input0 = line0.trim().isEmpty() ? new String[0] : line0.split(\" \");\n        int[] ratings = new int[input0.length];\n        for(int i = 0; i < input0.length; i++) {\n            ratings[i] = Integer.parseInt(input0[i]);\n        }\n        int threshold = Integer.parseInt(scanner.nextLine());\n        \n        // Call the solution function\n        int[] result = solution.filterPopularTracks(ratings, threshold);\n        \n        // Print the result\n        System.out.println(Arrays.toString(result));\n        \n        scanner.close();\n    }\n}",
  "test_cases": [
    {
      "test_case_number": 1,
      "input": "30 75 20 90 50\n50",
      "expected_output": "[75, 90]"
    },
    {
      "test_case_number": 2,
      "input": "10 15 5 2 8\n10",
      "expected_output": "[]"
    },
    {
      "test_case_number": 3,
      "input": "100 95 85 60 70\n80",
      "expected_output": "[100, 95, 85]"
    },
    {
      "test_case_number": 4,
      "input": "1 2 3 4 5\n3",
      "expected_output": "[4, 5]"
    }
  ]
}