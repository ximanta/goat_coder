{
  "language_id": 4,
  "problem_id": "123",
  "structure": {
    "problem_name": "reshuffle_shopping_list",
    "function_name": "reshuffle_list",
    "input_structure": [
      {
        "Input_Field": "List[str] items"
      }
    ],
    "output_structure": {
      "Output_Field": "List[str] new_list"
    }
  },
  "complete_source": "import java.util.*;\n            import java.io.*;\n            import java.text.*;\n            import java.time.*;\n            import java.math.*;\n            import java.util.regex.*;\n            \npublic class Main {\n\n/*DO NOT modify this method.*/\r\npublic String[] reshuffleList(String[] items) {\r\n    // If the array is null or has 0 or 1 item, return it as is.\r\n    if (items == null || items.length <= 1) {\r\n        return items;\r\n    }\r\n    \r\n    // Create a new array to hold the reshuffled list.\r\n    String[] reshuffled = new String[items.length];\r\n    \r\n    // Move the last item to the front.\r\n    reshuffled[0] = items[items.length - 1];\r\n    \r\n    // Shift the remaining items one position to the right.\r\n    for (int i = 0; i < items.length - 1; i++) {\r\n        reshuffled[i + 1] = items[i];\r\n    }\r\n    \r\n    return reshuffled;\r\n}\n\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        Main solution = new Main();\n        \n        // Parse input\n        List<String> items = new ArrayList<>();\n        while (scanner.hasNextLine()) {\n            String line = scanner.nextLine().trim();\n            if (line.isEmpty()) break;\n            String[] parts = line.split(\"\\\\s+\");\n            for (String part : parts) {\n                items.add(part);\n            }\n        }\n        \n        // Call the solution function\n        List<String> result = solution.reshuffleList(items);\n        \n        // Print the result\n        System.out.println(result);\n        scanner.close();\n    }\n}",
  "test_cases": [
    {
      "test_case_number": 1,
      "input": "apples\nbananas\ncarrots\ndates",
      "expected_output": "['dates', 'apples', 'bananas', 'carrots']"
    },
    {
      "test_case_number": 2,
      "input": "milk",
      "expected_output": "['milk']"
    },
    {
      "test_case_number": 3,
      "input": "",
      "expected_output": "[]"
    }
  ]
}